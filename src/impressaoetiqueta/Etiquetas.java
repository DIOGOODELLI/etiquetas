/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package impressaoetiqueta;


import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.event.PrintJobAdapter;
import javax.print.event.PrintJobEvent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**

/**
 *
 * @author diogo
 */
public class Etiquetas extends javax.swing.JFrame {
    
     String connectionUrl = "jdbc:sqlserver://DBPRODSNR01:1433;databaseName=sapiens;user=sapiens;password=Sen@SqlSap16";
     Connection con;
    /**
     * Creates new form Etiquetas
     */
    public Etiquetas(String connectionUrl, Connection con) {
        
        this.connectionUrl = connectionUrl;
        this.con = con;
        
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        jTextProduto.setText("");
        jTextEndereco.setText("");
        
        TableColumnModel tela = jTableEtiquetas.getColumnModel();
        tela.getColumn(0).setPreferredWidth(100);
        tela.getColumn(1).setPreferredWidth(300);
        tela.getColumn(2).setPreferredWidth(100);
        tela.getColumn(3).setPreferredWidth(350);
        tela.getColumn(4).setPreferredWidth(80);
        tela.getColumn(5).setPreferredWidth(80);
        tela.getColumn(6).setPreferredWidth(80);
        tela.getColumn(7).setPreferredWidth(80);
        tela.getColumn(8).setPreferredWidth(80);
         
        jLabel1.setVisible(false);
        jTextField1.setVisible(false);
        jButton1.setVisible(false);

        jTableEtiquetas.setDefaultRenderer(Object.class, new ZebradoGeral());
        
        jTableEtiquetas.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2 && ! e.isConsumed()) {
                    
                    if (jTableEtiquetas.getSelectedColumn() == 0){
                          jTextEndereco.setText(jTableEtiquetas.getModel().getValueAt(jTableEtiquetas.getSelectedRow(), jTableEtiquetas.getSelectedColumn()).toString());
                    }else if (jTableEtiquetas.getSelectedColumn() == 2){
                          jTextProduto.setText(jTableEtiquetas.getModel().getValueAt(jTableEtiquetas.getSelectedRow(), jTableEtiquetas.getSelectedColumn()).toString());
                    }
                    e.isConsumed();
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {}
            @Override
            public void mouseReleased(MouseEvent e) {}
            @Override
            public void mouseEntered(MouseEvent e) {}
            @Override
            public void mouseExited(MouseEvent e) {}
        });
        
        
        
        
        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);

        for (PrintService printer : printServices) {
              jComboBoxImp.addItem(printer.getName()); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBoxImp = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextProduto = new javax.swing.JTextField();
        jTextEndereco = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEtiquetas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Arquivo:");

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBoxImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxImpActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Etiqueta Sem Bin", "Etiqueta Recebimento P", "Etiqueta Recebimento G", "Etiqueta Prateleira", "Etiqueta Geral BIN -P", "Etiqueta DESCRIÇÃO" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Layout:");

        jLabel3.setText("Impressora:");

        jLabel4.setText("Produto:");

        jLabel6.setText("Endereço");

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Filtrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTableEtiquetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Endereço", "Descrição do Endereço", "Produto", "Descrição", "UND", "Derivação", "Derivação Descrição", "QTD Estoque", "Código de Barras"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEtiquetas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableEtiquetas.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(jTableEtiquetas);

        jButton1.setText("Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 274, Short.MAX_VALUE)
                                        .addComponent(jComboBoxImp, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextEndereco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                                .addComponent(jTextProduto, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(30, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxImp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBoxImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxImpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxImpActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if (! jComboBox1.getSelectedItem().equals("Prateleira")){

        }else{
            //Produto Pequeno
            //Produto Grande
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //Produto Pequeno
        //Produto Grande

        //if (jTableEtiquetas.getRowCount() == 0){
        
        
            if (jTextProduto.getText().isEmpty() && jTextEndereco.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Filtros Deverão ser informados!", "Validação", JOptionPane.PLAIN_MESSAGE); 
                return;
            }

            String endereco; 
            String descricaoProduto; 
            String codigoProduto; 
            String unidade;  
            String codigoDerivacao; 
            String codigoBarras; 
            String tipo;
            String DescEndereco;
        
        try {
            
            PrintService ps=PrintServiceLookup.lookupDefaultPrintService();
            DocPrintJob job=ps.createPrintJob();
            job.addPrintJobListener(new PrintJobAdapter() {
                @Override
                public void printDataTransferCompleted(PrintJobEvent event){
                }

                @Override
                public void printJobNoMoreEvents(PrintJobEvent event){
                    //System.out.println("received no more events");
                }
            });

            String dadosPrint = null;
            int itm = jComboBox1.getSelectedIndex()+1;
            
            
            String printerName = (String)jComboBoxImp.getSelectedItem();
   
            boolean printerCheck = false;
            PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
            
            String CODBAR;
            String CODPRO;
            String TEXTO_1;
            String TEXTO_2;
            String TEXTO_3;
            String ENDERECO_CODIGO;
            String DERIVACAO;
            String TEXTO_END_1;
            String TEXTO_END_2;
            String BIN;
            String UNIDADE;
            
            for (PrintService printer : printServices) {    
                
                if (printer.getName().equalsIgnoreCase(printerName)) {
                    
                    for(int linha=0; linha < jTableEtiquetas.getRowCount(); linha++){
                        
                        endereco           = (String)jTableEtiquetas.getModel().getValueAt(linha,0); 
                        DescEndereco       = (String)jTableEtiquetas.getModel().getValueAt(linha,1);
                        codigoProduto      = (String)jTableEtiquetas.getModel().getValueAt(linha,2); 
                        descricaoProduto   = (String)jTableEtiquetas.getModel().getValueAt(linha,3);
                        unidade            = (String)jTableEtiquetas.getModel().getValueAt(linha,4); 
                        codigoDerivacao    = (String)jTableEtiquetas.getModel().getValueAt(linha,5); 
                        codigoBarras       = (String)jTableEtiquetas.getModel().getValueAt(linha,8);
                        
                        
                        switch (itm) {
                            
                            case 1:                       
                                DescEndereco = DescEndereco.replace("Prateleira", "P.");
                                DescEndereco = DescEndereco.replace("Estante", "Est");
                                DescEndereco = DescEndereco.replace("Rua", "R.");
                                
                                CODBAR  =  codigoBarras;
                                CODPRO  =  codigoProduto;
                                TEXTO_1 =  descricaoProduto;
                                TEXTO_2 = "";
                                TEXTO_3 = "";
                                DERIVACAO = codigoDerivacao;
                                TEXTO_END_1 = DescEndereco;
                                TEXTO_END_2 = "";    
                                UNIDADE = unidade;
                                
                                
                                        
                                TEXTO_1 =  TEXTO_1.replaceAll("(\r\n|\n)","");
                                TEXTO_END_1 = TEXTO_END_1.replaceAll("(\r\n|\n)","");
                                
                                if(TEXTO_1.length() > 90){
                                    TEXTO_1 = TEXTO_1.substring(0, 90);
                                }
                                if(TEXTO_1.length() > 60){
                                    TEXTO_3 = TEXTO_1.substring(60, TEXTO_1.length());
                                    TEXTO_1 = TEXTO_1.substring(0, 60);
                                } 

                                if(TEXTO_1.length() > 30){
                                    TEXTO_2 = TEXTO_1.substring(30, TEXTO_1.length());
                                    TEXTO_1 = TEXTO_1.substring(0, 30);
                                }
                                
                                BIN = TEXTO_END_1.substring(TEXTO_END_1.indexOf("BIN") + 4, TEXTO_END_1.length());
                                
                                if(TEXTO_END_1.length() > 24){
                                    TEXTO_END_2 = TEXTO_END_1.substring(24, TEXTO_END_1.length());
                                    TEXTO_END_1 = TEXTO_END_1.substring(0, 24);
                                }
              
                                
                                if(CODBAR.equals("")){
                                    continue;
                                }
                                
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("CODBAR", CODBAR).
                                replace("CODPRO", CODPRO).
                                replace("DERIVACAO", DERIVACAO).        
                                replace("TEXTO_1", TEXTO_1).
                                replace("TEXTO_2", TEXTO_2).
                                replace("TEXTO_3", TEXTO_3).
                                replace("TEXTO_END_1", TEXTO_END_1).
                                replace("TEXTO_END_2", TEXTO_END_2).
                                replace("CBIN", BIN).
                                replace("UND", UNIDADE);        
              
                                break;
                                
                        
                            case 2:
                                CODBAR  = codigoBarras;
                                TEXTO_1 = codigoProduto;
                                TEXTO_1 =  TEXTO_1.replaceAll("(\r\n|\n)","");

                                if(CODBAR.equals("")){
                                    continue;
                                }
                                
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("CODBAR" , CODBAR).
                                replace("CODPRO", TEXTO_1);
                                
                                break;
                                
                            case 3:
                                
                                CODBAR  =  codigoBarras;
                                CODPRO  =  codigoProduto;
                                TEXTO_1 =  descricaoProduto;
                                TEXTO_2 =  "";
                                UNIDADE = unidade;
                                TEXTO_1 =  TEXTO_1.replaceAll("(\r\n|\n)","");
                                
                                    if(TEXTO_1.length() > 40){
                                    TEXTO_2 = TEXTO_1.substring(40, TEXTO_1.length());
                                    TEXTO_1 = TEXTO_1.substring(0, 40);
                                }
        
                                if(CODBAR.equals("")){
                                    continue;
                                }
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("CODBAR", CODBAR).
                                replace("CODPRO", CODPRO).
                                replace("TEXTO_1", TEXTO_1).
                                replace("TEXTO_2", TEXTO_2).
                                replace("UND", UNIDADE);
                                break;

                            case 4:
                                DescEndereco = (String)jTableEtiquetas.getModel().getValueAt(linha,1);                      
                         
                                ENDERECO_CODIGO = endereco;
                                TEXTO_END_1 = DescEndereco;
                                TEXTO_END_1 =  TEXTO_END_1.replaceAll("(\r\n|\n)","");                        
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("TEXTO_END_1", ENDERECO_CODIGO).
                                replace("TEXTO_END_2", TEXTO_END_1);
                                break;
                                
                            case 5:
                                
                                DescEndereco = DescEndereco.replace("Prateleira", "P.");
                                DescEndereco = DescEndereco.replace("Estante", "Est");
                                DescEndereco = DescEndereco.replace("Rua", "R.");
                                
                                CODBAR  =  codigoBarras;
                                CODPRO  =  codigoProduto;
                                TEXTO_END_1 = DescEndereco;
                                TEXTO_END_2 = "";
                                TEXTO_END_1 =  TEXTO_END_1.replaceAll("(\r\n|\n)","");  
                                
                                BIN = TEXTO_END_1.substring(TEXTO_END_1.indexOf("BIN") + 4, TEXTO_END_1.length());
                                
                                if(TEXTO_END_1.length() > 23){
                                    TEXTO_END_2 = TEXTO_END_1.substring(23, TEXTO_END_1.length());
                                    TEXTO_END_1 = TEXTO_END_1.substring(0, 23);
                                }
              
                                
                                if(CODBAR.equals("")){
                                    continue;
                                }
                                
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("CODBAR", CODBAR).
                                replace("CODPRO", CODPRO).
                                replace("TEXTO_END_1", TEXTO_END_1).
                                replace("TEXTO_END_2", TEXTO_END_2).
                                replace("CBIN", BIN);
                               
                                break;
                            
                            case 6:
                                
                                CODBAR  =  codigoBarras;
                                CODPRO  =  codigoProduto;
                                TEXTO_1 =  descricaoProduto;
                                TEXTO_2 =  "";
                                TEXTO_3 =  "";
                                UNIDADE = unidade;
                                
                                TEXTO_1 =  TEXTO_1.replaceAll("(\r\n|\n)","");
                                
                                if(TEXTO_1.length() > 100){
                                    TEXTO_1 = TEXTO_1.substring(0, 100);
                                }
                                if(TEXTO_1.length() > 70){
                                    TEXTO_3 = TEXTO_1.substring(70, TEXTO_1.length());
                                    TEXTO_1 = TEXTO_1.substring(0, 70);
                                } 

                                if(TEXTO_1.length() > 40){
                                    TEXTO_2 = TEXTO_1.substring(40, TEXTO_1.length());
                                    TEXTO_1 = TEXTO_1.substring(0, 40);
                                } 
                                
                                if(CODBAR.equals("")){
                                    continue;
                                }
                                
                                dadosPrint = getLayoutEtiqueta(itm).
                                replace("CODBAR", CODBAR).
                                replace("CODPRO", CODPRO).
                                replace("TEXTO_1", TEXTO_1).
                                replace("TEXTO_2", TEXTO_2).
                                replace("TEXTO_3", TEXTO_3).
                                replace("UND", UNIDADE);        
              
                                break;                                
         
                            default:
                                break;
                        }
                        
                        InputStream inputStream = new ByteArrayInputStream(dadosPrint.getBytes());
                        DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
                        Doc doc = new SimpleDoc(inputStream, flavor, null);
                        job = printer.createPrintJob();

                        job.print(doc, null);
                    }
                    printerCheck = true;
                }
            }

            if (printerCheck == false) {
                JOptionPane.showMessageDialog(null,"The printer you were searching for could not be found.");
            }
        } catch (Exception ex) {
            //Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        if (! jComboBox1.getSelectedItem().equals("Etiqueta Prateleira")){
 
            String FiltroProduto = "";
            if (! jTextProduto.getText().isEmpty()){
                FiltroProduto = "AND A.codpro = "+ "'"+ jTextProduto.getText() + "' ";
            }

            String FiltroEndereco = "";
            if (! jTextEndereco.getText().isEmpty()){
                FiltroEndereco = "AND A.CODEND LIKE '%"+  jTextEndereco.getText() + "%' ";
            }
            buscaBancoProduto(FiltroProduto, FiltroEndereco);

        }else{
            
            String FiltroEndereco = "";
            if (! jTextEndereco.getText().isEmpty()){
                FiltroEndereco = "AND A.CODEND LIKE '%"+  jTextEndereco.getText() + "%' ";
            }
            buscaBancoPrateleira(FiltroEndereco);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV FILES", "csv", "csv");
        fileChooser.setFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            //jTextField1.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Etiquetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         //</editor-fold>
         
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Etiquetas("", null).setVisible(true);
        });
    }
    
        
    public String getLayoutEtiqueta(int iEtiqueta){
        
        StringBuffer dadosPrint = new StringBuffer();
        
                switch (iEtiqueta) {

                    case 1://Etiqueta Sem Bin
                        
                        dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                        "^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                        "^XA\n" +
                        "^MMT\n" +
                        "^PW639\n" +
                        "^LL0320\n" +
                        "^LS0\n" +
                        "^FO173,73^GB422,37,37^FS\n" +
                        "^FT173,102^A0N,30,26^FR^FH\\^FDTEXTO_1^FS\n" +
                        "^FO173,110^GB422,37,37^FS\n" +
                        "^FT173,139^A0N,30,26^FR^FH\\^FDTEXTO_2^FS\n" +
                        "^FO173,147^GB422,37,37^FS\n" +
                        "^FT173,176^A0N,30,26^FR^FH\\^FDTEXTO_3^FS\n" +
                        "^FT37,179^BQN,2,6\n" +
                        "^FH\\^FDMA,CODBAR^FS\n" +
                        "^FO34,209^GB416,42,42^FS\n" +
                        "^FT34,242^A0N,34,38^FR^FH\\^FDTEXTO_END_1^FS\n" +
                        "^FO34,251^GB416,42,42^FS\n" +
                        "^FT34,284^A0N,34,38^FR^FH\\^FDTEXTO_END_2^FS\n" +
                        "^FT470,305^BQN,2,5\n" +
                        "^FH\\^FDMA,CBIN^FS\n" +
                        "^FO504,37^GB43,30,30^FS\n" +
                        "^FT504,61^A0N,24,28^FR^FH\\^FDDR:^FS\n" +
                        "^FO550,36^GB47,30,30^FS\n" +
                        "^FT550,60^A0N,24,48^FR^FH\\^FDDERIVACAO^FS\n" +
                        "^FO172,35^GB308,33,33^FS\n" +
                        "^FT172,61^A0N,27,45^FR^FH\\^FDCODPRO^FS\n" +
                        "^FO39,170^GB45,34,34^FS\n" +
                        "^FT39,197^A0N,28,28^FR^FH\\^FDUN:^FS\n" +
                        "^FO89,169^GB53,34,34^FS\n" +
                        "^FT89,196^A0N,28,48^FR^FH\\^FDUND^FS\n" +
                        "^PQ1,0,1,Y^XZ");
                        break;
   
                case 2://Etiqueta Recebimento P              
                        dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                        "^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                        "^XA\n" +
                        "^MMT\n" +
                        "^PW216\n" +
                        "^LL0160\n" +
                        "^LS0\n" +
                        "^FT20,86^BQN,2,3\n" +
                        "^FH\\^FDMA,CODBAR^FS\n" +
                        "^FO90,34^GB98,17,17^FS\n" +
                        "^FT90,47^A0N,14,14^FR^FH\\^FDCODPRO^FS\n" +
                        "^PQ1,0,1,Y^XZ");
                        break;       

                case 3://Etiqueta Recebimento G
                        dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                       "^XA~TA000~JSN^LT0^MNW^MTT^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                       "^XA\n" +
                       "^MMT\n" +
                       "^PW400\n" +
                       "^LL0160\n" +
                       "^LS0\n" +
                       "^FT34,125^BQN,2,4\n" +
                       "^FH\\^FDMA,CODBAR^FS\n" +
                       "^FT124,56^A0N,28,31^FH\\^FDCODPRO^FS\n" +
                       "^FT124,86^A0N,19,16^FH\\^FDTEXTO_1^FS\n" +
                       "^FT124,109^A0N,19,16^FH\\^FDTEXTO_2^FS\n" +
                       "^FT282,56^A0N,28,16^FH\\^FDUN:^FS\n" +
                       "^FT310,55^A0N,28,28^FH\\^FDUND^FS\n" +
                       "^PQ1,0,1,Y^XZ");
                        break;  

                  case 4://Etiqueta Prateleira        

                     dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                    "^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                    "^XA\n" +
                    "^MMT\n" +
                    "^PW559\n" +
                    "^LL0200\n" +
                    "^LS0\n" +
                    "^FO31,42^GB374,105,105^FS\n" +
                    "^FT31,126^A0N,84,24^FR^FH\\^FDTEXTO_END_2^FS\n" +
                    "^FT421,161^BQN,2,5\n" +
                    "^FH\\^FDMA,TEXTO_END_1^FS\n" +
                    "^PQ1,0,1,Y^XZ");  
                     break;  
                     
                case 5:  //Etiqueta Geral BIN -P
                    dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                    "^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                    "^XA\n" +
                    "^MMT\n" +
                    "^PW599\n" +
                    "^LL0200\n" +
                    "^LS0\n" +
                    "^FT42,186^BQN,2,6\n" +
                    "^FH\\^FDMA,CODBAR^FS\n" +
                    "^FO185,46^GB311,33,33^FS\n" +
                    "^FT185,72^A0N,27,64^FR^FH\\^FDCODPRO^FS\n" +
                    "^FT410,182^BQN,2,4\n" +
                    "^FH\\^FDMA,CBIN^FS\n" +
                    "^FO180,92^GB222,38,38^FS\n" +
                    "^FT180,122^A0N,31,21^FR^FH\\^FDTEXTO_END_1^FS\n" +
                    "^FO180,130^GB222,38,38^FS\n" +
                    "^FT180,160^A0N,31,21^FR^FH\\^FDTEXTO_END_2^FS\n" +
                    "^PQ1,0,1,Y^XZ");  
                   break; 
                   
                case 6:  //Etiqueta Geral BIN -P
                    dadosPrint.append('\u0002' +"CT~~CD,~CC^~CT~\n" +
                    "^XA~TA000~JSN^LT0^MNW^MTD^PON^PMN^LH0,0^JMA^PR4,4~SD15^JUS^LRN^CI0^XZ\n" +
                    "^XA\n" +
                    "^MMT\n" +
                    "^PW599\n" +
                    "^LL0200\n" +
                    "^LS0\n" +
                    "^FO81,16^GB270,43,43^FS\n" +
                    "^FT81,50^A0N,35,55^FR^FH\\^FDCODPRO^FS\n" +
                    "^FO8,71^GB586,37,37^FS\n" +
                    "^FT8,100^A0N,30,26^FR^FH\\^FDTEXTO_1^FS\n" +
                    "^FO8,108^GB586,37,37^FS\n" +
                    "^FT8,137^A0N,30,26^FR^FH\\^FDTEXTO_2^FS\n" +
                    "^FO8,145^GB586,37,37^FS\n" +
                    "^FT8,174^A0N,30,26^FR^FH\\^FDTEXTO_3^FS\n" +
                    "^FO386,17^GB52,43,43^FS\n" +
                    "^FT386,51^A0N,35,33^FR^FH\\^FDUN:^FS\n" +
                    "^FO444,17^GB42,43,43^FS\n" +
                    "^FT444,51^A0N,35,33^FR^FH\\^FDUND^FS\n" +
                    "^PQ1,0,1,Y^XZ");  
                   break;                     

                 default:
                     break;

                }      

        dadosPrint.append("E" + "\r");
            
        return dadosPrint.toString();
    }
    
    
       public void buscaBancoProduto(String FiltroProduto, String FiltroEndereco){
            
           String erro = "";
            DefaultTableModel model =(DefaultTableModel) jTableEtiquetas.getModel();
            model.setRowCount(0);
            try {
                Statement stmt = con.createStatement();
          
                  //ver produto 1050800756 duplicado
                String SQL = "SELECT " +
                        "TOP 1000 " +
                        "A.codend," +
                        "E.desend, " +
                        "A.CODPRO," +
                        "C.DESPRO," +
                        "C.UNIMED," +
                        "d.codder," +
                        "d.desder," +
                        "sum(a.QTDEST)," +
                        "D.CODBA2 " +
                        "FROM e210est A " +
                        "JOIN E205DEP B ON A.CODDEP = B.CODDEP AND A.CODEMP = B.CODEMP " +
                        "LEFT JOIN E075PRO C ON a.CODEMP = C.CODEMP AND A.CODPRO = C.CODPRO " +
                        "LEFT JOIN e075der D ON A.CODEMP = D.CODEMP AND A.codpro = D.CODPRO AND a.CODDER = D.CODDER " + 
                        "LEFT JOIN e205end E ON A.codemp = E.codemp AND A.codend = E.codend " +
                        "WHERE A.codemp = 100 AND A.coddep <> '7' " +
                        FiltroProduto +
                        FiltroEndereco +
                        "AND A.coddep IN ( " +
                        "SELECT coddep FROM e205dep WHERE codemp = 100 " +
                        "AND codfil = 7 )  "+ 
                        "GROUP BY A.codend, E.desend, A.CODPRO, C.DESPRO, C.UNIMED, d.codder, d.desder, D.CODBA2 "+
                        "ORDER BY A.codend desc ";
                
                    ResultSet rs = stmt.executeQuery(SQL);
                    
                    while (rs.next()) {          
                        model.addRow(new Object[]{
                            rs.getString(1) != null ? rs.getString(1) : "", 
                            rs.getString(2) != null ? rs.getString(2) : "", 
                            rs.getString(3) != null ? rs.getString(3) : "",  
                            rs.getString(4) != null ? rs.getString(4) : "", 
                            rs.getString(5) != null ? rs.getString(5) : "", 
                            rs.getString(6) != null ? rs.getString(6) : "", 
                            rs.getString(7) != null ? rs.getString(7) : "", 
                            rs.getString(8) != null ? rs.getString(8) : "", 
                            rs.getString(9) != null ? rs.getString(9) : "", 
                        }); 
                }
                    
            }catch(SQLException er)  {
                JOptionPane.showMessageDialog(null, er.toString(), "Problemas!", JOptionPane.PLAIN_MESSAGE);
            } 
    }
    
    
    
        public void buscaBancoPrateleira(String FiltroEndereco){
            
            DefaultTableModel model =(DefaultTableModel) jTableEtiquetas.getModel();
            model.setRowCount(0);

            try {

                Statement stmt = con.createStatement();
                String SQL = "SELECT "
                        + "SUBSTRING ( a.codend ,1, 10 ), "
                        + "SUBSTRING ( a.desend ,1,  CHARINDEX('BIN', A.desend)-3 ) "
                        + "FROM e205end a "
                        + "WHERE a.codemp = 100 "
                        + FiltroEndereco
                        + "GROUP BY SUBSTRING ( a.codend ,1, 10 ), "
                        + "SUBSTRING ( a.desend ,1,  CHARINDEX('BIN', A.desend)-3 ) ";
                
                    ResultSet rs = stmt.executeQuery(SQL);
                    
                    while (rs.next()) {
                            model.addRow(new Object[]{
                            rs.getString(1), 
                            rs.getString(2)
                        }); 
                    }
            }catch(Exception er) {}
    }
    
    

    
    public List<String[]> readData() throws IOException { 
        
        int count = 0;
        String file = jTextField1.getText();
        List<String[]> content = new ArrayList<>();
        try(BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                content.add(line.split(";"));
            }
        } catch (FileNotFoundException e) {
          //Some error logging
        }
        return content;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBoxImp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEtiquetas;
    private javax.swing.JTextField jTextEndereco;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextProduto;
    // End of variables declaration//GEN-END:variables
}
